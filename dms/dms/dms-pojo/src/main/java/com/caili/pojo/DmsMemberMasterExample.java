package com.caili.pojo;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class DmsMemberMasterExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public DmsMemberMasterExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public DmsMemberMasterExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public DmsMemberMasterExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        DmsMemberMasterExample example = new DmsMemberMasterExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public DmsMemberMasterExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public DmsMemberMasterExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDistNoIsNull() {
            addCriterion("dist_no is null");
            return (Criteria) this;
        }

        public Criteria andDistNoIsNotNull() {
            addCriterion("dist_no is not null");
            return (Criteria) this;
        }

        public Criteria andDistNoEqualTo(String value) {
            addCriterion("dist_no =", value, "distNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistNoEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_no = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistNoNotEqualTo(String value) {
            addCriterion("dist_no <>", value, "distNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistNoNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_no <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistNoGreaterThan(String value) {
            addCriterion("dist_no >", value, "distNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistNoGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_no > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistNoGreaterThanOrEqualTo(String value) {
            addCriterion("dist_no >=", value, "distNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistNoGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_no >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistNoLessThan(String value) {
            addCriterion("dist_no <", value, "distNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistNoLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_no < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistNoLessThanOrEqualTo(String value) {
            addCriterion("dist_no <=", value, "distNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistNoLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_no <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistNoLike(String value) {
            addCriterion("dist_no like", value, "distNo");
            return (Criteria) this;
        }

        public Criteria andDistNoNotLike(String value) {
            addCriterion("dist_no not like", value, "distNo");
            return (Criteria) this;
        }

        public Criteria andDistNoIn(List<String> values) {
            addCriterion("dist_no in", values, "distNo");
            return (Criteria) this;
        }

        public Criteria andDistNoNotIn(List<String> values) {
            addCriterion("dist_no not in", values, "distNo");
            return (Criteria) this;
        }

        public Criteria andDistNoBetween(String value1, String value2) {
            addCriterion("dist_no between", value1, value2, "distNo");
            return (Criteria) this;
        }

        public Criteria andDistNoNotBetween(String value1, String value2) {
            addCriterion("dist_no not between", value1, value2, "distNo");
            return (Criteria) this;
        }

        public Criteria andDistNameIsNull() {
            addCriterion("dist_name is null");
            return (Criteria) this;
        }

        public Criteria andDistNameIsNotNull() {
            addCriterion("dist_name is not null");
            return (Criteria) this;
        }

        public Criteria andDistNameEqualTo(String value) {
            addCriterion("dist_name =", value, "distName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistNameEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistNameNotEqualTo(String value) {
            addCriterion("dist_name <>", value, "distName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistNameNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistNameGreaterThan(String value) {
            addCriterion("dist_name >", value, "distName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistNameGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistNameGreaterThanOrEqualTo(String value) {
            addCriterion("dist_name >=", value, "distName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistNameGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistNameLessThan(String value) {
            addCriterion("dist_name <", value, "distName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistNameLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistNameLessThanOrEqualTo(String value) {
            addCriterion("dist_name <=", value, "distName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistNameLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistNameLike(String value) {
            addCriterion("dist_name like", value, "distName");
            return (Criteria) this;
        }

        public Criteria andDistNameNotLike(String value) {
            addCriterion("dist_name not like", value, "distName");
            return (Criteria) this;
        }

        public Criteria andDistNameIn(List<String> values) {
            addCriterion("dist_name in", values, "distName");
            return (Criteria) this;
        }

        public Criteria andDistNameNotIn(List<String> values) {
            addCriterion("dist_name not in", values, "distName");
            return (Criteria) this;
        }

        public Criteria andDistNameBetween(String value1, String value2) {
            addCriterion("dist_name between", value1, value2, "distName");
            return (Criteria) this;
        }

        public Criteria andDistNameNotBetween(String value1, String value2) {
            addCriterion("dist_name not between", value1, value2, "distName");
            return (Criteria) this;
        }

        public Criteria andSponsorNoIsNull() {
            addCriterion("sponsor_no is null");
            return (Criteria) this;
        }

        public Criteria andSponsorNoIsNotNull() {
            addCriterion("sponsor_no is not null");
            return (Criteria) this;
        }

        public Criteria andSponsorNoEqualTo(String value) {
            addCriterion("sponsor_no =", value, "sponsorNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSponsorNoEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("sponsor_no = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSponsorNoNotEqualTo(String value) {
            addCriterion("sponsor_no <>", value, "sponsorNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSponsorNoNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("sponsor_no <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSponsorNoGreaterThan(String value) {
            addCriterion("sponsor_no >", value, "sponsorNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSponsorNoGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("sponsor_no > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSponsorNoGreaterThanOrEqualTo(String value) {
            addCriterion("sponsor_no >=", value, "sponsorNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSponsorNoGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("sponsor_no >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSponsorNoLessThan(String value) {
            addCriterion("sponsor_no <", value, "sponsorNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSponsorNoLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("sponsor_no < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSponsorNoLessThanOrEqualTo(String value) {
            addCriterion("sponsor_no <=", value, "sponsorNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSponsorNoLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("sponsor_no <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSponsorNoLike(String value) {
            addCriterion("sponsor_no like", value, "sponsorNo");
            return (Criteria) this;
        }

        public Criteria andSponsorNoNotLike(String value) {
            addCriterion("sponsor_no not like", value, "sponsorNo");
            return (Criteria) this;
        }

        public Criteria andSponsorNoIn(List<String> values) {
            addCriterion("sponsor_no in", values, "sponsorNo");
            return (Criteria) this;
        }

        public Criteria andSponsorNoNotIn(List<String> values) {
            addCriterion("sponsor_no not in", values, "sponsorNo");
            return (Criteria) this;
        }

        public Criteria andSponsorNoBetween(String value1, String value2) {
            addCriterion("sponsor_no between", value1, value2, "sponsorNo");
            return (Criteria) this;
        }

        public Criteria andSponsorNoNotBetween(String value1, String value2) {
            addCriterion("sponsor_no not between", value1, value2, "sponsorNo");
            return (Criteria) this;
        }

        public Criteria andSponsorNameIsNull() {
            addCriterion("sponsor_name is null");
            return (Criteria) this;
        }

        public Criteria andSponsorNameIsNotNull() {
            addCriterion("sponsor_name is not null");
            return (Criteria) this;
        }

        public Criteria andSponsorNameEqualTo(String value) {
            addCriterion("sponsor_name =", value, "sponsorName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSponsorNameEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("sponsor_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSponsorNameNotEqualTo(String value) {
            addCriterion("sponsor_name <>", value, "sponsorName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSponsorNameNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("sponsor_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSponsorNameGreaterThan(String value) {
            addCriterion("sponsor_name >", value, "sponsorName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSponsorNameGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("sponsor_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSponsorNameGreaterThanOrEqualTo(String value) {
            addCriterion("sponsor_name >=", value, "sponsorName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSponsorNameGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("sponsor_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSponsorNameLessThan(String value) {
            addCriterion("sponsor_name <", value, "sponsorName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSponsorNameLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("sponsor_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSponsorNameLessThanOrEqualTo(String value) {
            addCriterion("sponsor_name <=", value, "sponsorName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSponsorNameLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("sponsor_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSponsorNameLike(String value) {
            addCriterion("sponsor_name like", value, "sponsorName");
            return (Criteria) this;
        }

        public Criteria andSponsorNameNotLike(String value) {
            addCriterion("sponsor_name not like", value, "sponsorName");
            return (Criteria) this;
        }

        public Criteria andSponsorNameIn(List<String> values) {
            addCriterion("sponsor_name in", values, "sponsorName");
            return (Criteria) this;
        }

        public Criteria andSponsorNameNotIn(List<String> values) {
            addCriterion("sponsor_name not in", values, "sponsorName");
            return (Criteria) this;
        }

        public Criteria andSponsorNameBetween(String value1, String value2) {
            addCriterion("sponsor_name between", value1, value2, "sponsorName");
            return (Criteria) this;
        }

        public Criteria andSponsorNameNotBetween(String value1, String value2) {
            addCriterion("sponsor_name not between", value1, value2, "sponsorName");
            return (Criteria) this;
        }

        public Criteria andLevelNoIsNull() {
            addCriterion("level_no is null");
            return (Criteria) this;
        }

        public Criteria andLevelNoIsNotNull() {
            addCriterion("level_no is not null");
            return (Criteria) this;
        }

        public Criteria andLevelNoEqualTo(Integer value) {
            addCriterion("level_no =", value, "levelNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andLevelNoEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("level_no = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLevelNoNotEqualTo(Integer value) {
            addCriterion("level_no <>", value, "levelNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andLevelNoNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("level_no <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLevelNoGreaterThan(Integer value) {
            addCriterion("level_no >", value, "levelNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andLevelNoGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("level_no > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLevelNoGreaterThanOrEqualTo(Integer value) {
            addCriterion("level_no >=", value, "levelNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andLevelNoGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("level_no >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLevelNoLessThan(Integer value) {
            addCriterion("level_no <", value, "levelNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andLevelNoLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("level_no < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLevelNoLessThanOrEqualTo(Integer value) {
            addCriterion("level_no <=", value, "levelNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andLevelNoLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("level_no <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLevelNoIn(List<Integer> values) {
            addCriterion("level_no in", values, "levelNo");
            return (Criteria) this;
        }

        public Criteria andLevelNoNotIn(List<Integer> values) {
            addCriterion("level_no not in", values, "levelNo");
            return (Criteria) this;
        }

        public Criteria andLevelNoBetween(Integer value1, Integer value2) {
            addCriterion("level_no between", value1, value2, "levelNo");
            return (Criteria) this;
        }

        public Criteria andLevelNoNotBetween(Integer value1, Integer value2) {
            addCriterion("level_no not between", value1, value2, "levelNo");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andPinIsNull() {
            addCriterion("pin is null");
            return (Criteria) this;
        }

        public Criteria andPinIsNotNull() {
            addCriterion("pin is not null");
            return (Criteria) this;
        }

        public Criteria andPinEqualTo(Byte value) {
            addCriterion("pin =", value, "pin");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andPinEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("pin = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPinNotEqualTo(Byte value) {
            addCriterion("pin <>", value, "pin");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andPinNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("pin <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPinGreaterThan(Byte value) {
            addCriterion("pin >", value, "pin");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andPinGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("pin > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPinGreaterThanOrEqualTo(Byte value) {
            addCriterion("pin >=", value, "pin");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andPinGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("pin >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPinLessThan(Byte value) {
            addCriterion("pin <", value, "pin");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andPinLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("pin < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPinLessThanOrEqualTo(Byte value) {
            addCriterion("pin <=", value, "pin");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andPinLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("pin <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPinIn(List<Byte> values) {
            addCriterion("pin in", values, "pin");
            return (Criteria) this;
        }

        public Criteria andPinNotIn(List<Byte> values) {
            addCriterion("pin not in", values, "pin");
            return (Criteria) this;
        }

        public Criteria andPinBetween(Byte value1, Byte value2) {
            addCriterion("pin between", value1, value2, "pin");
            return (Criteria) this;
        }

        public Criteria andPinNotBetween(Byte value1, Byte value2) {
            addCriterion("pin not between", value1, value2, "pin");
            return (Criteria) this;
        }

        public Criteria andTelephoneIsNull() {
            addCriterion("telephone is null");
            return (Criteria) this;
        }

        public Criteria andTelephoneIsNotNull() {
            addCriterion("telephone is not null");
            return (Criteria) this;
        }

        public Criteria andTelephoneEqualTo(String value) {
            addCriterion("telephone =", value, "telephone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andTelephoneEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("telephone = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelephoneNotEqualTo(String value) {
            addCriterion("telephone <>", value, "telephone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andTelephoneNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("telephone <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelephoneGreaterThan(String value) {
            addCriterion("telephone >", value, "telephone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andTelephoneGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("telephone > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelephoneGreaterThanOrEqualTo(String value) {
            addCriterion("telephone >=", value, "telephone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andTelephoneGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("telephone >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelephoneLessThan(String value) {
            addCriterion("telephone <", value, "telephone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andTelephoneLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("telephone < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelephoneLessThanOrEqualTo(String value) {
            addCriterion("telephone <=", value, "telephone");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andTelephoneLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("telephone <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTelephoneLike(String value) {
            addCriterion("telephone like", value, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneNotLike(String value) {
            addCriterion("telephone not like", value, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneIn(List<String> values) {
            addCriterion("telephone in", values, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneNotIn(List<String> values) {
            addCriterion("telephone not in", values, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneBetween(String value1, String value2) {
            addCriterion("telephone between", value1, value2, "telephone");
            return (Criteria) this;
        }

        public Criteria andTelephoneNotBetween(String value1, String value2) {
            addCriterion("telephone not between", value1, value2, "telephone");
            return (Criteria) this;
        }

        public Criteria andDistStatusIsNull() {
            addCriterion("dist_status is null");
            return (Criteria) this;
        }

        public Criteria andDistStatusIsNotNull() {
            addCriterion("dist_status is not null");
            return (Criteria) this;
        }

        public Criteria andDistStatusEqualTo(Byte value) {
            addCriterion("dist_status =", value, "distStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistStatusEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_status = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistStatusNotEqualTo(Byte value) {
            addCriterion("dist_status <>", value, "distStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistStatusNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_status <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistStatusGreaterThan(Byte value) {
            addCriterion("dist_status >", value, "distStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistStatusGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_status > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistStatusGreaterThanOrEqualTo(Byte value) {
            addCriterion("dist_status >=", value, "distStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistStatusGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_status >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistStatusLessThan(Byte value) {
            addCriterion("dist_status <", value, "distStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistStatusLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_status < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistStatusLessThanOrEqualTo(Byte value) {
            addCriterion("dist_status <=", value, "distStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDistStatusLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dist_status <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDistStatusIn(List<Byte> values) {
            addCriterion("dist_status in", values, "distStatus");
            return (Criteria) this;
        }

        public Criteria andDistStatusNotIn(List<Byte> values) {
            addCriterion("dist_status not in", values, "distStatus");
            return (Criteria) this;
        }

        public Criteria andDistStatusBetween(Byte value1, Byte value2) {
            addCriterion("dist_status between", value1, value2, "distStatus");
            return (Criteria) this;
        }

        public Criteria andDistStatusNotBetween(Byte value1, Byte value2) {
            addCriterion("dist_status not between", value1, value2, "distStatus");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andVipTimeIsNull() {
            addCriterion("vip_time is null");
            return (Criteria) this;
        }

        public Criteria andVipTimeIsNotNull() {
            addCriterion("vip_time is not null");
            return (Criteria) this;
        }

        public Criteria andVipTimeEqualTo(LocalDateTime value) {
            addCriterion("vip_time =", value, "vipTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andVipTimeEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("vip_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipTimeNotEqualTo(LocalDateTime value) {
            addCriterion("vip_time <>", value, "vipTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andVipTimeNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("vip_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipTimeGreaterThan(LocalDateTime value) {
            addCriterion("vip_time >", value, "vipTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andVipTimeGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("vip_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("vip_time >=", value, "vipTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andVipTimeGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("vip_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipTimeLessThan(LocalDateTime value) {
            addCriterion("vip_time <", value, "vipTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andVipTimeLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("vip_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("vip_time <=", value, "vipTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andVipTimeLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("vip_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipTimeIn(List<LocalDateTime> values) {
            addCriterion("vip_time in", values, "vipTime");
            return (Criteria) this;
        }

        public Criteria andVipTimeNotIn(List<LocalDateTime> values) {
            addCriterion("vip_time not in", values, "vipTime");
            return (Criteria) this;
        }

        public Criteria andVipTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("vip_time between", value1, value2, "vipTime");
            return (Criteria) this;
        }

        public Criteria andVipTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("vip_time not between", value1, value2, "vipTime");
            return (Criteria) this;
        }

        public Criteria andSvipTimeIsNull() {
            addCriterion("svip_time is null");
            return (Criteria) this;
        }

        public Criteria andSvipTimeIsNotNull() {
            addCriterion("svip_time is not null");
            return (Criteria) this;
        }

        public Criteria andSvipTimeEqualTo(LocalDateTime value) {
            addCriterion("svip_time =", value, "svipTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSvipTimeEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("svip_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSvipTimeNotEqualTo(LocalDateTime value) {
            addCriterion("svip_time <>", value, "svipTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSvipTimeNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("svip_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSvipTimeGreaterThan(LocalDateTime value) {
            addCriterion("svip_time >", value, "svipTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSvipTimeGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("svip_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSvipTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("svip_time >=", value, "svipTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSvipTimeGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("svip_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSvipTimeLessThan(LocalDateTime value) {
            addCriterion("svip_time <", value, "svipTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSvipTimeLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("svip_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSvipTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("svip_time <=", value, "svipTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andSvipTimeLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("svip_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSvipTimeIn(List<LocalDateTime> values) {
            addCriterion("svip_time in", values, "svipTime");
            return (Criteria) this;
        }

        public Criteria andSvipTimeNotIn(List<LocalDateTime> values) {
            addCriterion("svip_time not in", values, "svipTime");
            return (Criteria) this;
        }

        public Criteria andSvipTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("svip_time between", value1, value2, "svipTime");
            return (Criteria) this;
        }

        public Criteria andSvipTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("svip_time not between", value1, value2, "svipTime");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoIsNull() {
            addCriterion("dream_member_no is null");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoIsNotNull() {
            addCriterion("dream_member_no is not null");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoEqualTo(String value) {
            addCriterion("dream_member_no =", value, "dreamMemberNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberNoEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_no = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoNotEqualTo(String value) {
            addCriterion("dream_member_no <>", value, "dreamMemberNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberNoNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_no <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoGreaterThan(String value) {
            addCriterion("dream_member_no >", value, "dreamMemberNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberNoGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_no > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoGreaterThanOrEqualTo(String value) {
            addCriterion("dream_member_no >=", value, "dreamMemberNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberNoGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_no >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoLessThan(String value) {
            addCriterion("dream_member_no <", value, "dreamMemberNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberNoLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_no < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoLessThanOrEqualTo(String value) {
            addCriterion("dream_member_no <=", value, "dreamMemberNo");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberNoLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_no <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoLike(String value) {
            addCriterion("dream_member_no like", value, "dreamMemberNo");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoNotLike(String value) {
            addCriterion("dream_member_no not like", value, "dreamMemberNo");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoIn(List<String> values) {
            addCriterion("dream_member_no in", values, "dreamMemberNo");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoNotIn(List<String> values) {
            addCriterion("dream_member_no not in", values, "dreamMemberNo");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoBetween(String value1, String value2) {
            addCriterion("dream_member_no between", value1, value2, "dreamMemberNo");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNoNotBetween(String value1, String value2) {
            addCriterion("dream_member_no not between", value1, value2, "dreamMemberNo");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameIsNull() {
            addCriterion("dream_member_name is null");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameIsNotNull() {
            addCriterion("dream_member_name is not null");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameEqualTo(String value) {
            addCriterion("dream_member_name =", value, "dreamMemberName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberNameEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameNotEqualTo(String value) {
            addCriterion("dream_member_name <>", value, "dreamMemberName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberNameNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameGreaterThan(String value) {
            addCriterion("dream_member_name >", value, "dreamMemberName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberNameGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameGreaterThanOrEqualTo(String value) {
            addCriterion("dream_member_name >=", value, "dreamMemberName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberNameGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameLessThan(String value) {
            addCriterion("dream_member_name <", value, "dreamMemberName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberNameLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameLessThanOrEqualTo(String value) {
            addCriterion("dream_member_name <=", value, "dreamMemberName");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberNameLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameLike(String value) {
            addCriterion("dream_member_name like", value, "dreamMemberName");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameNotLike(String value) {
            addCriterion("dream_member_name not like", value, "dreamMemberName");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameIn(List<String> values) {
            addCriterion("dream_member_name in", values, "dreamMemberName");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameNotIn(List<String> values) {
            addCriterion("dream_member_name not in", values, "dreamMemberName");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameBetween(String value1, String value2) {
            addCriterion("dream_member_name between", value1, value2, "dreamMemberName");
            return (Criteria) this;
        }

        public Criteria andDreamMemberNameNotBetween(String value1, String value2) {
            addCriterion("dream_member_name not between", value1, value2, "dreamMemberName");
            return (Criteria) this;
        }

        public Criteria andDreamMemberBindIsNull() {
            addCriterion("dream_member_bind is null");
            return (Criteria) this;
        }

        public Criteria andDreamMemberBindIsNotNull() {
            addCriterion("dream_member_bind is not null");
            return (Criteria) this;
        }

        public Criteria andDreamMemberBindEqualTo(Integer value) {
            addCriterion("dream_member_bind =", value, "dreamMemberBind");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberBindEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_bind = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberBindNotEqualTo(Integer value) {
            addCriterion("dream_member_bind <>", value, "dreamMemberBind");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberBindNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_bind <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberBindGreaterThan(Integer value) {
            addCriterion("dream_member_bind >", value, "dreamMemberBind");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberBindGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_bind > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberBindGreaterThanOrEqualTo(Integer value) {
            addCriterion("dream_member_bind >=", value, "dreamMemberBind");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberBindGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_bind >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberBindLessThan(Integer value) {
            addCriterion("dream_member_bind <", value, "dreamMemberBind");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberBindLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_bind < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberBindLessThanOrEqualTo(Integer value) {
            addCriterion("dream_member_bind <=", value, "dreamMemberBind");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberBindLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_bind <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberBindIn(List<Integer> values) {
            addCriterion("dream_member_bind in", values, "dreamMemberBind");
            return (Criteria) this;
        }

        public Criteria andDreamMemberBindNotIn(List<Integer> values) {
            addCriterion("dream_member_bind not in", values, "dreamMemberBind");
            return (Criteria) this;
        }

        public Criteria andDreamMemberBindBetween(Integer value1, Integer value2) {
            addCriterion("dream_member_bind between", value1, value2, "dreamMemberBind");
            return (Criteria) this;
        }

        public Criteria andDreamMemberBindNotBetween(Integer value1, Integer value2) {
            addCriterion("dream_member_bind not between", value1, value2, "dreamMemberBind");
            return (Criteria) this;
        }

        public Criteria andDreamMemberGroupIdIsNull() {
            addCriterion("dream_member_group_id is null");
            return (Criteria) this;
        }

        public Criteria andDreamMemberGroupIdIsNotNull() {
            addCriterion("dream_member_group_id is not null");
            return (Criteria) this;
        }

        public Criteria andDreamMemberGroupIdEqualTo(Integer value) {
            addCriterion("dream_member_group_id =", value, "dreamMemberGroupId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberGroupIdEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_group_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberGroupIdNotEqualTo(Integer value) {
            addCriterion("dream_member_group_id <>", value, "dreamMemberGroupId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberGroupIdNotEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_group_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberGroupIdGreaterThan(Integer value) {
            addCriterion("dream_member_group_id >", value, "dreamMemberGroupId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberGroupIdGreaterThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_group_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberGroupIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("dream_member_group_id >=", value, "dreamMemberGroupId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberGroupIdGreaterThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_group_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberGroupIdLessThan(Integer value) {
            addCriterion("dream_member_group_id <", value, "dreamMemberGroupId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberGroupIdLessThanColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_group_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberGroupIdLessThanOrEqualTo(Integer value) {
            addCriterion("dream_member_group_id <=", value, "dreamMemberGroupId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria andDreamMemberGroupIdLessThanOrEqualToColumn(DmsMemberMaster.Column column) {
            addCriterion(new StringBuilder("dream_member_group_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDreamMemberGroupIdIn(List<Integer> values) {
            addCriterion("dream_member_group_id in", values, "dreamMemberGroupId");
            return (Criteria) this;
        }

        public Criteria andDreamMemberGroupIdNotIn(List<Integer> values) {
            addCriterion("dream_member_group_id not in", values, "dreamMemberGroupId");
            return (Criteria) this;
        }

        public Criteria andDreamMemberGroupIdBetween(Integer value1, Integer value2) {
            addCriterion("dream_member_group_id between", value1, value2, "dreamMemberGroupId");
            return (Criteria) this;
        }

        public Criteria andDreamMemberGroupIdNotBetween(Integer value1, Integer value2) {
            addCriterion("dream_member_group_id not between", value1, value2, "dreamMemberGroupId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dms_member_master
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        private DmsMemberMasterExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        protected Criteria(DmsMemberMasterExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public DmsMemberMasterExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table dms_member_master
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dms_member_master
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table dms_member_master
         *
         * @mbg.generated
         */
        void example(DmsMemberMasterExample example);
    }
}